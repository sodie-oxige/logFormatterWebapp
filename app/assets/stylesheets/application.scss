@use "global" as *;
@use "sass:math";
@import "https://unpkg.com/ress/dist/ress.min.css" layer(reset);

@view-transition {
    navigation: auto;
}

@font-face {
    font-family: "Noto Sans JP";
    src: url("/font/NotoSansJP-VariableFont_wght.ttf");
}

@layer base {
    * {
        position: relative;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Noto Sans JP", sans-serif;
        line-height: 1.2;
        accent-color: #ffe600;
    }

    :root {
        color: light-dark(black, #eee);
        font-size: unquote('min(20px, 3dvw, 3dvh)');

        &[colorschemetype="0"] {
            color-scheme: light dark;
        }

        &[colorschemetype="1"] {
            color-scheme: light;
        }

        &[colorschemetype="2"] {
            color-scheme: dark;
        }
    }

    ::view-transition-old(*),
    ::view-transition-new(*) {
        height: 100%;
    }

    body {
        min-height: 100dvh;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin-top: 1em;
        margin-bottom: 0.75em;
    }

    table {
        display: block;
        width: fit-content;
        min-width: 100%;
        border-collapse: collapse;

        tbody {
            display: table;
            @include sp{
                width: 100%;
                table-layout: fixed;
            }
        }

        tr {
            padding: 0 30px;

            &:first-child {
                border-bottom: solid 2px gray;
            }

            &:not(:first-child, :last-child) {
                border-bottom: solid 1px gray;
            }

            &:has(td:hover)>td {
                background-color: rgba(128, 128, 128, 0.2);
            }
        }

        th,
        td {
            padding: .5em 1em;
            white-space: nowrap;
            text-align: center;

            &:has(>a) {
                padding: 0;

                >a {
                    padding: 10px 30px;
                }
            }
        }
    }

    form:not(.button_to) {
        margin: 0 30px;
        display: flex;
        flex-direction: column;
        gap: 10px;

        input,
        button,
        textarea,
        select {
            padding: 10px;
            background-color: $hight-base-color;
            border: solid thin gray;
            border-radius: 5px;
            font-size: 1rem;
            color: light-dark(black, white);

            &[type="file"] {
                background-color: transparent;
                border: none;
            }

            &:focus-visible {
                filter: drop-shadow(0 0 20px rgba(128, 128, 128, 0.5));
            }
        }

        input,
        textarea,
        select {
            width: 100%;
        }

        button,
        input[type="button"],
        input[type="submit"] {
            background-color: $base-color;
        }

        label {
            margin-top: 10px;
            font-size: .8rem;
        }
    }

    button,
    input[type="button"],
    input[type="submit"] {
        margin-bottom: 10px;
        color: $assort-color;
        padding: 10px;
        border: solid thin gray;
        border-radius: 5px;
    }

    i {
        line-height: 1;
    }

    .container:nth-child(1 of .container:has(:is(h1, h2, h3, h4, h5, h6))) :is(h1, h2, h3, h4, h5, h6):first-child {
        margin-top: 0;
    }

    .xflex,
    .hflex,
    .vflex {
        display: flex;

        &.vflex {
            flex-direction: column;
        }

        &.xflex {
            @include sp {
                flex-direction: column;
            }
        }

        &.hflex {
            flex-direction: row;
        }

        &.xflex {
            @include pc {
                flex-direction: row;
            }
        }

        &.gap {
            gap: 50px;
        }
    }

    .selectButton {
        display: flex;
        width: fit-content;
        border: solid thin $assort-color;
        border-radius: 1em;
        overflow: hidden;

        >* {
            padding: 0.5em 0.75em;

            &.selected {
                background-color: $assort-color;
                color: $base-color;
            }

            &:nth-child(1 of .selectButton_item) {
                padding-left: 1em;
            }

            &:nth-last-child(1 of .selectButton_item) {
                padding-right: 1em;
            }

            &:not(:nth-last-child(1 of .selectButton_item)) {
                border-right: solid thin $assort-color;
            }

            i {
                display: block;
                aspect-ratio: 1;
            }
        }
    }
}

#startup_mask {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    scale: 1;
    background-color: $hight-base-color;
    opacity: 1;
    transition:
        opacity 1s .5s,
        scale 1s .5s;
    pointer-events: none;

    &.hidden {
        opacity: 0;
        scale: 1.2;
    }

    >h1 {
        margin: 0;
        font-size: 3rem;
        line-height: 1;

        span {
            translate: 0 -15px;
            display: inline-block;
        }
    }

    >span {
        font-size: .5rem;
    }
}

#loading_mask {
    position: fixed;
    z-index: 90;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100dvw;
    height: 100dvh;
    background-color: rgba(128, 128, 128, 0.2);
    pointer-events: none;

    &.hidden {
        opacity: 0;
    }

    #loader {
        width: 50px;
        aspect-ratio: 1;
        border-radius: 50%;
        border: 8px solid $base-color;
        animation:
            l20-1 0.8s infinite linear alternate,
            l20-2 1.6s infinite linear;
    }

    @keyframes l20-1 {
        0% {
            clip-path: polygon(50% 50%, 0 0, 50% 0%, 50% 0%, 50% 0%, 50% 0%, 50% 0%)
        }

        12.5% {
            clip-path: polygon(50% 50%, 0 0, 50% 0%, 100% 0%, 100% 0%, 100% 0%, 100% 0%)
        }

        25% {
            clip-path: polygon(50% 50%, 0 0, 50% 0%, 100% 0%, 100% 100%, 100% 100%, 100% 100%)
        }

        50% {
            clip-path: polygon(50% 50%, 0 0, 50% 0%, 100% 0%, 100% 100%, 50% 100%, 0% 100%)
        }

        62.5% {
            clip-path: polygon(50% 50%, 100% 0, 100% 0%, 100% 0%, 100% 100%, 50% 100%, 0% 100%)
        }

        75% {
            clip-path: polygon(50% 50%, 100% 100%, 100% 100%, 100% 100%, 100% 100%, 50% 100%, 0% 100%)
        }

        100% {
            clip-path: polygon(50% 50%, 50% 100%, 50% 100%, 50% 100%, 50% 100%, 50% 100%, 0% 100%)
        }
    }

    @keyframes l20-2 {
        0% {
            transform: scaleY(1) rotate(0deg)
        }

        49.99% {
            transform: scaleY(1) rotate(135deg)
        }

        50% {
            transform: scaleY(-1) rotate(0deg)
        }

        100% {
            transform: scaleY(-1) rotate(-135deg)
        }
    }
}

nav {
    position: fixed;
    top: 0;
    z-index: 100;
    display: flex;
    align-items: center;
    padding: calc(env(safe-area-inset-top) + 5px) 5px 5px;
    width: 100%;
    height: calc(env(safe-area-inset-top) + 60px);
    background-color: $hight-base-color;
    box-shadow: 0 0 10px rgba(128, 128, 128, 0.2);

    .nav_menubutton {
        margin-left: 10px;
        $width: 30px;
        $bar-width: 4px;
        width: $width;
        height: $width;

        @include pc {
            display: none !important;
        }

        .nav_menubutton_bar,
        &::before,
        &::after {
            content: "";
            position: absolute;
            left: 0;
            width: $width;
            height: $bar-width;
            background-color: gray;
            border-radius: math.div($bar-width, 2);
            transition: top .3s, rotate .3s, opacity .3s;
        }

        .nav_menubutton_bar {
            top: math.div(($width - $bar-width), 2);
        }

        &::before {
            top: math.div(($width - $bar-width), 2) - $bar-width*2;
        }

        &::after {
            top: math.div(($width - $bar-width), 2) + $bar-width*2;
        }

        &.open {
            &::before {
                top: math.div(($width - $bar-width), 2);
                rotate: 45deg;
            }

            &::after {
                top: math.div(($width - $bar-width), 2);
                rotate: -45deg;
            }

            &>.nav_menubutton_bar {
                opacity: 0;
            }
        }
    }

    .nav_logo {
        margin-left: 1em;
        font-size: 30px;
        color: light-dark(black, white);
        font-weight: bold;
        text-decoration: none;
        user-select: none;
    }

    button {
        margin: 10px;
        border: none;
    }
}

main {
    position: fixed;
    top: 0;
    bottom: 0;
    z-index: 0;
    display: flex;
    padding-top: calc(env(safe-area-inset-top) + 60px);

    #sidebar {
        position: sticky;
        top: calc(env(safe-area-inset-top) + 60px);
        z-index: 5;
        padding-left: env(safe-area-inset-left);
        width: 20dvw;
        height: calc(100dvh - env(safe-area-inset-top) - 60px);
        border-right: solid thin rgba(128, 128, 128, 0.5);
        background-color: $hight-base-color;
        overflow-x: hidden;
        transition: max-width .3s;

        &.default-hidden {
            padding-left: 0;
            max-width: 0;
        }

        @include sp {
            width: 50dvw;

            &.open {
                border-right: none;
                max-width: 0;
            }

            &:not(.open) {
                max-width: 50dvw;
            }
        }

        >#sidebar_container {
            width: 20dvw;

            @include sp {
                width: 50dvw;
            }

            >* {
                display: flex;
                flex-direction: column;
                padding: 20px;
                color: light-dark(black, white);
                font-weight: bold;
                text-decoration: none;

                &:hover {
                    background-color: rgba(128, 128, 128, 0.2);
                }
            }
        }
    }

    #sidebar+#main::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: black;
    }

    #sidebar+#main::before {
        z-index: -1;
        opacity: 0;
        transition: opacity 0.2s, z-index 0s 0.2s;
    }

    @include sp {
        #sidebar:not(.open)+#main::before {
            z-index: 4;
            opacity: 0.5;
            transition: opacity 0.2s;
        }
    }


    #main {
        margin: 0 auto;
        padding: 30px 0;
        padding-right: env(safe-area-inset-right);
        height: calc(100dvh - env(safe-area-inset-top) - 60px);
        overflow: auto;

        >.container {
            padding: 0 50px;
            overflow-x: auto;
            overflow-y: clip;
            scrollbar-width: thin;
            scrollbar-color: transparent transparent;
            transition: scrollbar-color .2s;

            &:hover {
                scrollbar-color: #333 transparent;
            }

            @supports not (scrollbar-width: thin) {
                &:hover::-webkit-scrollbar {
                    width: 0;
                }

                &::-webkit-scrollbar {
                    width: 6px;
                    background-color: transparent;
                }

                &::-webkit-scrollbar-thumb {
                    background: #333;
                    width: 6px;
                    border-radius: 5px;
                }
            }
        }

        @include sp {
            width: 100dvw !important;
        }
    }

    #sidebar.open:not(.default-hidden)+#main,
    #sidebar.default-hidden:not(.open)+#main {
        width: 80dvw;
    }

    #sidebar:not(.open):not(.default-hidden)+#main,
    #sidebar.open.default-hidden+#main {
        width: 100dvw;
    }
}